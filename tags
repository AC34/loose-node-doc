!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
0	package.json	/^    "node",$/;"	s	array:keywords
0	test/options/otree.json	/^			"0": "Copying depth is limited up to the given directory.\\nDoes not copy recursively.\\nto_d/;"	s	object:copyFilesBy.comment
0	test/options/otree.json	/^			"0": "Provides JSON related functionalities.\\n",$/;"	s	object:JSON.comment
0	test/options/otree.json	/^			"0": "Reads file as text by UTF-8.\\n",$/;"	s	object:readText.comment
0	test/options/otree.json	/^			"0": "Skips process when from_path does not exist.\\n",$/;"	s	object:modifyFile.comment
0	test/options/otree.json	/^			"0": "This object defines log levels by by their severity. Severity in this object is complia/;"	s	object:log.loglevels.comment
0	test/options/otree.json	/^			"0": "Updates file update time.\\nJust an alias of fs.utimeSync.\\n",$/;"	s	object:touchFiles.comment
0	test/options/otree.json	/^			"0": "Writes text to file by utf-8.\\n",$/;"	s	object:writeText.comment
0	test/options/otree.json	/^			"0": "{key:from_file_path to:to_file_path}\\n",$/;"	s	object:copyFiles.comment
0	test/parse/result.json	/^    "0": "This is mock comment 1.\\nline 2 of mock1.\\n",$/;"	s	object:mock1
0	test/parse/result.json	/^    "0": "This is mock comment....\\nmultiple parameters.\\n",$/;"	s	object:mock2
0	test/parse/result.json	/^    "0": "This is mock comment.\\nmultiple lines of comments after @.\\n",$/;"	s	object:mock3
1	package.json	/^    "doc"$/;"	s	array:keywords
1	test/options/otree.json	/^			"1": {$/;"	o	object:JSON.comment
1	test/options/otree.json	/^			"1": {$/;"	o	object:concatFiles.comment
1	test/options/otree.json	/^			"1": {$/;"	o	object:copyFiles.comment
1	test/options/otree.json	/^			"1": {$/;"	o	object:copyFilesBy.comment
1	test/options/otree.json	/^			"1": {$/;"	o	object:log.loglevels.comment
1	test/options/otree.json	/^			"1": {$/;"	o	object:modifyFile.comment
1	test/options/otree.json	/^			"1": {$/;"	o	object:readText.comment
1	test/options/otree.json	/^			"1": {$/;"	o	object:touchFiles.comment
1	test/options/otree.json	/^			"1": {$/;"	o	object:writeText.comment
1	test/parse/result.json	/^    "1": {$/;"	o	object:mock1
1	test/parse/result.json	/^    "1": {$/;"	o	object:mock2
1	test/parse/result.json	/^    "1": {$/;"	o	object:mock3
1. Installation	README.md	/^### 1. Installation$/;"	S
2	test/options/otree.json	/^			"2": {$/;"	o	object:concatFiles.comment
2	test/options/otree.json	/^			"2": {$/;"	o	object:copyFilesBy.comment
2	test/options/otree.json	/^			"2": {$/;"	o	object:log.loglevels.comment
2	test/options/otree.json	/^			"2": {$/;"	o	object:modifyFile.comment
2	test/options/otree.json	/^			"2": {$/;"	o	object:touchFiles.comment
2	test/options/otree.json	/^			"2": {$/;"	o	object:writeText.comment
2	test/parse/result.json	/^    "2": {$/;"	o	object:mock1
2	test/parse/result.json	/^    "2": {$/;"	o	object:mock2
2	test/parse/result.json	/^    "2": {$/;"	o	object:mock3
2.Writing genrator script	README.md	/^### 2.Writing genrator script$/;"	S
3	test/options/otree.json	/^			"3": {$/;"	o	object:modifyFile.comment
3	test/options/otree.json	/^			"3": {$/;"	o	object:touchFiles.comment
3	test/parse/result.json	/^    "3": {$/;"	o	object:mock2
3	test/parse/result.json	/^    "3": {$/;"	o	object:mock3
3.1 Autocompletion can help	README.md	/^#### 3.1 Autocompletion can help$/;"	t
3.2 Options	README.md	/^#### 3.2 Options$/;"	t
3.3 Ignoring objects	README.md	/^##### 3.3 Ignoring objects$/;"	T
3.4 Choosing language	README.md	/^##### 3.4 Choosing language$/;"	T
3.4 Format of options.	README.md	/^##### 3.4 Format of options.$/;"	T
3.Setting options	README.md	/^### 3.Setting options$/;"	S
4	test/options/otree.json	/^			"4": {$/;"	o	object:modifyFile.comment
4	test/options/otree.json	/^			"4": {$/;"	o	object:touchFiles.comment
4	test/parse/result.json	/^    "4": {$/;"	o	object:mock2
4	test/parse/result.json	/^    "4": {$/;"	o	object:mock3
4. Outputs and Customization	README.md	/^### 4. Outputs and Customization$/;"	S
5	test/parse/result.json	/^    "5": {$/;"	o	object:mock3
5 About	README.md	/^### 5 About$/;"	S
5.1 Intention	README.md	/^#### 5.1 Intention $/;"	t
5.2 Enviroment	README.md	/^#### 5.2 Enviroment$/;"	t
5.3 Origin	README.md	/^#### 5.3 Origin $/;"	t
API	README.md	/^#### API$/;"	t
AnonymousFunction67a718570100	src/outputs/FileWriter.js	/^      fs.mkdirSync(dir, { recursive: true }, function(err) {$/;"	f
By fetching html	README.md	/^##### By fetching html $/;"	T
By the parsed object	README.md	/^##### By the parsed object$/;"	T
Customizing outputs	README.md	/^#### Customizing outputs$/;"	t
Default	README.md	/^#### Default$/;"	t
FileWriter	src/outputs/FileWriter.js	/^function FileWriter(project_root_dir) {$/;"	c
Generating	README.md	/^#### Generating$/;"	t
How to use	README.md	/^## How to use$/;"	s
JSON	test/options/otree.json	/^	"JSON": {$/;"	o
LND	entry_point.js	/^var LND = {$/;"	c
ProjectInfo	src/ProjectInfo/model/ProjectInfo.js	/^var ProjectInfo = {$/;"	c
Roadmap	README.md	/^## Roadmap$/;"	s
US	src/outputs/lang/langs_list.js	/^		"US": "en_US"$/;"	p	class:module.exports.en
Very simple blue print	README.md	/^#### Very simple blue print$/;"	t
a-key-does-not-exist	test/options/optionstest.js	/^  "a-key-does-not-exist":true$/;"	p	class:options
addLanguage	src/arrange/html_page/createPage.js	/^function addLanguage(html, options) {$/;"	f
assignComments	src/intakes/resolve/resolveCommentsByTag.js	/^function assignComments(otree,formed) {$/;"	f
assureDirExistance	src/outputs/FileWriter.js	/^function assureDirExistance(file_path) {$/;"	f
author	package.json	/^  "author": "AC34",$/;"	s
bugs	package.json	/^  "bugs": {$/;"	o
build_script_path	src/ProjectInfo/model/ProjectInfo.js	/^  build_script_path:"",$/;"	p	class:ProjectInfo
checkObjectStatus	src/processInterfaces.js	/^  checkObjectStatus: function(object) {$/;"	m	class:processInterfaces
comment	src/Options/options_lister.js	/^var comment = "\/*\\n"+$/;"	v
comment	src/intakes/resolve/resolveCommentsByTag.js	/^      otree[name] = {comment:formed[name]};$/;"	p	class:assignComments.otree
comment	src/intakes/resolve/resolveFunctionComments.js	/^  cpositions[i] = {"start":starts_at+last_pos,"end":ends_at,"comment":str.substring(starts_at,en/;"	p	class:locateComments.cpositions
comment	src/outputs/lang/langs_lister.js	/^var comment = "\/*\\n"+$/;"	v
comment	test/options/otree.json	/^		"comment": {$/;"	o	object:JSON
comment	test/options/otree.json	/^		"comment": {$/;"	o	object:concatFiles
comment	test/options/otree.json	/^		"comment": {$/;"	o	object:copyFiles
comment	test/options/otree.json	/^		"comment": {$/;"	o	object:copyFilesBy
comment	test/options/otree.json	/^		"comment": {$/;"	o	object:log.loglevels
comment	test/options/otree.json	/^		"comment": {$/;"	o	object:modifyFile
comment	test/options/otree.json	/^		"comment": {$/;"	o	object:readText
comment	test/options/otree.json	/^		"comment": {$/;"	o	object:touchFiles
comment	test/options/otree.json	/^		"comment": {$/;"	o	object:writeText
commentToHtml	src/arrange/html/util/commentToHtml.js	/^function commentToHtml(name, comments, options, ProjectInfo) {$/;"	f
concatFiles	test/options/otree.json	/^	"concatFiles": {$/;"	o
console	src/processInterfaces.js	/^  console: require(".\/outputs\/Console"),$/;"	p	class:processInterfaces
constructRootObject	src/intakes/resolve/resolveObjectDependencies.js	/^function constructRootObject(caches) {$/;"	f
copyFiles	test/options/otree.json	/^	"copyFiles": {$/;"	o
copyFilesBy	test/options/otree.json	/^	"copyFilesBy": {$/;"	o
countOtreeComment	src/interfaces/util/countOtreeComments.js	/^function countOtreeComment(otree) {$/;"	f
cpositions	src/intakes/resolve/resolveFunctionComments.js	/^  cpositions[i] = {"start":starts_at+last_pos,"end":ends_at,"comment":str.substring(starts_at,en/;"	c	class:locateComments
createCacheTree	src/intakes/traverse/traverseCache.js	/^function createCacheTree() {$/;"	f
createGNavi	src/arrange/html_page/util/createGNavi.js	/^function createGNavi(options,ProjectInfo){$/;"	f
createLangNamesObject	src/outputs/lang/langs_lister.js	/^function createLangNamesObject(){$/;"	f
createList	src/arrange/html_page/util/createGNavi.js	/^function createList(list){$/;"	f
createMetas	src/arrange/html_page/util/createMetas.js	/^function createMetas(html,options,ProjectInfo){$/;"	f
createNotifications	src/arrange/html_page/util/createNotifications.js	/^function createNotifications(html, options, ProjectInfo) {$/;"	f
createObjectTree	src/intakes/traverse/traverseObjectNames.js	/^function createObjectTree(prefix,obj,tree){$/;"	f
createPage	src/arrange/html_page/createPage.js	/^function createPage(html, options, ProjectInfo) {$/;"	f
dat	src/outputs/lang/langs_lister.js	/^var dat = comment+"module.exports = "+JSON.stringify(langs,null,"\\t")+";";$/;"	v
data	src/Options/options_lister.js	/^var data = comment+="module.exports ="+JSON.stringify(list,null,"\\t");$/;"	v
data_type	src/Options/Options.js	/^    data_type: "array",$/;"	p	class:module.exports.ignore_objects
data_type	src/Options/Options.js	/^    data_type: "array",$/;"	p	class:module.exports.ignore_paths
data_type	src/Options/Options.js	/^    data_type: "boolean",$/;"	p	class:module.exports.enable_default_ignore_paths
data_type	src/Options/Options.js	/^    data_type: "boolean",$/;"	p	class:module.exports.verbose
data_type	src/Options/Options.js	/^    data_type: "boolean",$/;"	p	class:module.exports.write_logs
data_type	src/Options/Options.js	/^    data_type: "boolean",$/;"	p	class:module.exports.write_object_tree
data_type	src/Options/Options.js	/^    data_type: "object",$/;"	p	class:module.exports.html_format
data_type	src/Options/Options.js	/^    data_type: "string",$/;"	p	class:module.exports.html_template_name
data_type	src/Options/Options.js	/^    data_type: "string",$/;"	p	class:module.exports.lang
data_type	src/Options/Options.js	/^    data_type: "string",$/;"	p	class:module.exports.log_path
data_type	src/Options/Options.js	/^    data_type: "string",$/;"	p	class:module.exports.object_tree_path
data_type	src/Options/Options.js	/^    data_type: "string",$/;"	p	class:module.exports.package_json_path
data_type	src/Options/Options.js	/^    data_type: "string",$/;"	p	class:module.exports.trail_tag
data_type	src/Options/Options.js	/^    data_type:"array",$/;"	p	class:module.exports.html_notifications
data_type	src/Options/Options.js	/^    data_type:"object",$/;"	p	class:module.exports.html_meta
data_type	src/Options/Options.js	/^    data_type:"string",$/;"	p	class:module.exports.html_about_html
data_type	src/Options/Options.js	/^    data_type:"string",$/;"	p	class:module.exports.html_custom_css
data_type	src/Options/Options.js	/^    data_type:"string",$/;"	p	class:module.exports.html_custom_script
data_type	src/Options/Options.js	/^    data_type:"string",$/;"	p	class:module.exports.html_path
data_type	src/Options/Options.js	/^    data_type:"string",$/;"	p	class:module.exports.html_site_description
data_type	src/Options/Options.js	/^    data_type:"string",$/;"	p	class:module.exports.html_site_title
data_type	src/Options/Options.js	/^    data_type:"string",$/;"	p	class:module.exports.html_version_html
datatype	src/Options/Options.js	/^    datatype:"array",$/;"	p	class:module.exports.html_gnavi_links
description	package.json	/^  "description": "tries to generate loosely constructed Node.js project document in html by trav/;"	s
description	test/options/otree.json	/^				"description": "myfile.txt or updates."$/;"	s	object:touchFiles.comment.4
description	test/options/otree.json	/^				"description": "optional"$/;"	s	object:touchFiles.comment.3
description	test/parse/result.json	/^      "description": "must belong to param_3"$/;"	s	object:mock3.3
description	test/parse/result.json	/^      "description": "must belong to return"$/;"	s	object:mock3.4
description	test/parse/result.json	/^      "description": "this is param1"$/;"	s	object:mock3.1
description	test/parse/result.json	/^      "description": "this is param2must belong to param2"$/;"	s	object:mock3.2
documentation_id	src/ProjectInfo/model/ProjectInfo.js	/^    documentation_id:"documentation",$/;"	p	class:ProjectInfo.html_template
dxlb	test/message/msgtest.js	/^var dxlb = require("..\/..\/..\/..\/dxl-builder");$/;"	v
dxlb	test/options/optionstest.js	/^var dxlb = require(__dirname+"\/..\/..\/..\/..\/dxl-builder");$/;"	v
empty-cache	src/outputs/lang/en/US.js	/^  "empty-cache":function(){$/;"	m	class:module.exports
empty-object	src/outputs/lang/en/US.js	/^  "empty-object":function(){$/;"	m	class:module.exports
en	src/outputs/lang/langs_list.js	/^	"en": {$/;"	c	class:module.exports
enable_default_ignore_paths	src/Options/Options.js	/^  enable_default_ignore_paths: {$/;"	c	class:module.exports
enable_default_ignore_paths	src/Options/option_keys.js	/^	"enable_default_ignore_paths": "enable_default_ignore_paths",$/;"	p	class:module.exports
enable_default_ignore_paths	test/options/optionstest.js	/^  "enable_default_ignore_paths":false,$/;"	p	class:options
end	src/intakes/resolve/resolveFunctionComments.js	/^  cpositions[i] = {"start":starts_at+last_pos,"end":ends_at,"comment":str.substring(starts_at,en/;"	p	class:locateComments.cpositions
entry_point_dir	src/ProjectInfo/model/ProjectInfo.js	/^  entry_point_dir:"",$/;"	p	class:ProjectInfo
entry_point_path	src/ProjectInfo/model/ProjectInfo.js	/^  entry_point_path:"",$/;"	p	class:ProjectInfo
enumerateLanguages	src/outputs/lang/langs_lister.js	/^function enumerateLanguages(langs_object){$/;"	f
exports	src/Options/Options.js	/^module.exports = {$/;"	c	class:module
exports	src/Options/option_keys.js	/^module.exports ={$/;"	c	class:module
exports	src/arrange/ignore/ignoreObject.js	/^module.exports = function(objects, ignores) {$/;"	f	function:module
exports	src/outputs/Console.js	/^module.exports = {$/;"	c	class:module
exports	src/outputs/lang/en/US.js	/^module.exports = {$/;"	c	class:module
exports	src/outputs/lang/langs_list.js	/^module.exports = {$/;"	c	class:module
exports	test/options/otree.json	/^		"exports": "function concatFiles(target_path, list) {\\n  var util = require(\\".\/utils\/util/;"	s	object:concatFiles
exports	test/options/otree.json	/^		"exports": "function copyFiles(from_to_pairs) {\\n  this.util = require(\\".\/utils\/util\\");/;"	s	object:copyFiles
exports	test/options/otree.json	/^		"exports": "function copyFilesBy(list, to_dir) {\\n  var fs = require(\\"fs\\");\\n  list = th/;"	s	object:copyFilesBy
exports	test/options/otree.json	/^		"exports": "function modifyFile(from_path, prepend, dest_path, append) {\\n  var util = requir/;"	s	object:modifyFile
exports	test/options/otree.json	/^		"exports": "function readText(file_name){\\n  var fs = this.util.fs;\\n  if(file_name===undefi/;"	s	object:readText
exports	test/options/otree.json	/^		"exports": "function touchFiles(files, date) {\\n  var util = require(\\".\/utils\/util\\");\\/;"	s	object:touchFiles
exports	test/options/otree.json	/^		"exports": "function writeText(file_name,str){\\n  var fs = this.util.fs;\\n  if(file_name===u/;"	s	object:writeText
extractComments	src/intakes/resolve/resolveFunctionComments.js	/^function extractComments(func_locs,files){$/;"	f
fetchComments	src/arrange/merge/util/parseComment.js	/^function fetchComments(file_string){$/;"	f
fetchDataTypes	src/intakes/parse/parser/parseComment.js	/^function fetchDataTypes(d_block) {$/;"	f
file	src/Options/options_lister.js	/^var file = __dirname+sep+"option_keys.js";$/;"	v
file	src/outputs/lang/langs_lister.js	/^var file = __dirname + sep + "langs_list.js";$/;"	v
filename	test/options/otree.json	/^		"filename": "dxl-builder\/interfaces\/concatFiles.js",$/;"	s	object:concatFiles
filename	test/options/otree.json	/^		"filename": "dxl-builder\/interfaces\/copyFiles.js",$/;"	s	object:copyFiles
filename	test/options/otree.json	/^		"filename": "dxl-builder\/interfaces\/copyFilesBy.js",$/;"	s	object:copyFilesBy
filename	test/options/otree.json	/^		"filename": "dxl-builder\/interfaces\/modifyFile.js",$/;"	s	object:modifyFile
filename	test/options/otree.json	/^		"filename": "dxl-builder\/interfaces\/touchFiles.js",$/;"	s	object:touchFiles
filename	test/options/otree.json	/^		"filename": "dxl-builder\/interfaces\/utils\/functions\/readText.js",$/;"	s	object:readText
filename	test/options/otree.json	/^		"filename": "dxl-builder\/interfaces\/utils\/functions\/writeText.js",$/;"	s	object:writeText
formNamesObject	src/intakes/resolve/resolveCommentsByTag.js	/^function formNamesObject(comments, tag) {$/;"	f
fs	src/arrange/merge/util/parseComment.js	/^var fs = require("fs");$/;"	v
fs	src/outputs/FileWriter.js	/^var fs = require("fs");$/;"	v
fs	src/outputs/lang/langs_lister.js	/^var fs = require("fs");$/;"	v
g_navi_id	src/ProjectInfo/model/ProjectInfo.js	/^    g_navi_id:"g-navi",$/;"	p	class:ProjectInfo.html_template
g_navi_ul_id	src/ProjectInfo/model/ProjectInfo.js	/^    g_navi_ul_id:"g-links",$/;"	p	class:ProjectInfo.html_template
generate	entry_point.js	/^LND.generate = function(object, options = {}) {$/;"	c	class:LND
getAbsolutePath	src/outputs/FileWriter.js	/^FileWriter.prototype.getAbsolutePath= function(file_path) {$/;"	m	class:FileWriter
getMessages	src/outputs/Console.js	/^var getMessages = require(".\/getMessages");$/;"	v
getMessages	src/outputs/getMessages.js	/^function getMessages(lang,Console) {$/;"	f
getProjectInfo	src/ProjectInfo/getProjectInfo.js	/^function getProjectInfo(options){$/;"	f
homepage	package.json	/^  "homepage": "https:\/\/github.com\/AC34\/loose-node-doc#readme"$/;"	s
html_about_html	src/Options/Options.js	/^  html_about_html:{$/;"	c	class:module.exports
html_about_html	src/Options/option_keys.js	/^	"html_about_html": "html_about_html",$/;"	p	class:module.exports
html_custom_css	src/Options/Options.js	/^  html_custom_css:{$/;"	c	class:module.exports
html_custom_css	src/Options/option_keys.js	/^	"html_custom_css": "html_custom_css",$/;"	p	class:module.exports
html_custom_script	src/Options/Options.js	/^  html_custom_script:{$/;"	c	class:module.exports
html_custom_script	src/Options/option_keys.js	/^	"html_custom_script": "html_custom_script",$/;"	p	class:module.exports
html_format	src/Options/Options.js	/^  html_format: {$/;"	c	class:module.exports
html_format	src/Options/option_keys.js	/^	"html_format": "html_format"$/;"	p	class:module.exports
html_gnavi_links	src/Options/Options.js	/^  html_gnavi_links:{$/;"	c	class:module.exports
html_gnavi_links	src/Options/option_keys.js	/^	"html_gnavi_links": "html_gnavi_links",$/;"	p	class:module.exports
html_meta	src/Options/Options.js	/^  html_meta:{$/;"	c	class:module.exports
html_meta	src/Options/option_keys.js	/^	"html_meta": "html_meta",$/;"	p	class:module.exports
html_notifications	src/Options/Options.js	/^  html_notifications:{$/;"	c	class:module.exports
html_notifications	src/Options/option_keys.js	/^	"html_notifications": "html_notifications",$/;"	p	class:module.exports
html_path	src/Options/Options.js	/^  html_path:{$/;"	c	class:module.exports
html_path	src/Options/option_keys.js	/^	"html_path": "html_path",$/;"	p	class:module.exports
html_site_description	src/Options/Options.js	/^  html_site_description:{$/;"	c	class:module.exports
html_site_description	src/Options/option_keys.js	/^	"html_site_description": "html_site_description",$/;"	p	class:module.exports
html_site_title	src/Options/Options.js	/^  html_site_title:{$/;"	c	class:module.exports
html_site_title	src/Options/option_keys.js	/^	"html_site_title": "html_site_title",$/;"	p	class:module.exports
html_template	src/ProjectInfo/model/ProjectInfo.js	/^  html_template:{$/;"	c	class:ProjectInfo
html_template_name	src/Options/Options.js	/^  html_template_name: {$/;"	c	class:module.exports
html_template_name	src/Options/option_keys.js	/^	"html_template_name": "html_template_name",$/;"	p	class:module.exports
html_version_html	src/Options/Options.js	/^  html_version_html:{$/;"	c	class:module.exports
html_version_html	src/Options/option_keys.js	/^	"html_version_html": "html_version_html",$/;"	p	class:module.exports
ignoreCTreeByDefault	src/processInterfaces.js	/^  ignoreCTreeByDefault: function(cache_tree, options, ProjectInfo) {$/;"	m	class:processInterfaces
ignoreCTreeByUserDefinition	src/processInterfaces.js	/^  ignoreCTreeByUserDefinition: function(cache_tree, options, ProjectInfo) {$/;"	m	class:processInterfaces
ignoreObjectNames	src/processInterfaces.js	/^  ignoreObjectNames: function(obj_names, ignores) {$/;"	m	class:processInterfaces
ignorePaths	src/arrange/ignore/ignorePaths.js	/^function ignorePaths(cache_tree, ignores, root_dir) {$/;"	f
ignore_objects	src/Options/Options.js	/^  ignore_objects: {$/;"	c	class:module.exports
ignore_objects	src/Options/option_keys.js	/^	"ignore_objects": "ignore_objects",$/;"	p	class:module.exports
ignore_objects	test/options/optionstest.js	/^  "ignore_objects":["util.fs"]$/;"	p	class:options
ignore_paths	src/Options/Options.js	/^  ignore_paths: {$/;"	c	class:module.exports
ignore_paths	src/Options/option_keys.js	/^	"ignore_paths": "ignore_paths",$/;"	p	class:module.exports
ignore_paths	test/options/optionstest.js	/^  "ignore_paths":["node_modulez"],$/;"	p	class:options
ignores	src/Options/options_lister.js	/^var ignores = ["default_ignore_paths"];$/;"	v
illega-tag-type	src/outputs/lang/language_specific.js	/^  "illega-tag-type":function(given_type){$/;"	m	class:langauge_specific_messages
illegal-lang-tag-format	src/outputs/lang/language_specific.js	/^  "illegal-lang-tag-format"(given_tag){$/;"	m	class:langauge_specific_messages
insertAboutHtml	src/arrange/html_page/createPage.js	/^function insertAboutHtml(html, options) {$/;"	f
insertCSS	src/arrange/html_page/createPage.js	/^function insertCSS(html,options){$/;"	f
insertGNavi	src/arrange/html_page/createPage.js	/^function insertGNavi(html, options, ProjectInfo) {$/;"	f
insertHtml	src/arrange/html_page/createPage.js	/^function insertHtml(template,html){$/;"	f
insertMetas	src/arrange/html_page/createPage.js	/^function insertMetas(html,options,ProjectInfo){$/;"	f
insertNotifications	src/arrange/html_page/createPage.js	/^function insertNotifications(html, options, ProjectInfo) {$/;"	f
insertScript	src/arrange/html_page/createPage.js	/^function insertScript(html,options){$/;"	f
insertTitles	src/arrange/html_page/createPage.js	/^function insertTitles(html,options,ProjectInfo){$/;"	f
insertVersion	src/arrange/html_page/createPage.js	/^function insertVersion(html, options, ProjectInfo) {$/;"	f
isBlockDataTypes	src/intakes/parse/parser/parseComment.js	/^function isBlockDataTypes(suspect) {$/;"	f
isWritablePath	src/outputs/FileWriter.js	/^FileWriter.prototype.isWritablePath = function(file_path) {$/;"	m	class:FileWriter
item_class	src/ProjectInfo/model/ProjectInfo.js	/^    item_class:"doc-item",$/;"	p	class:ProjectInfo.html_template
item_description_class	src/ProjectInfo/model/ProjectInfo.js	/^    item_description_class:"description",$/;"	p	class:ProjectInfo.html_template
item_details_class	src/ProjectInfo/model/ProjectInfo.js	/^    item_details_class:"details",$/;"	p	class:ProjectInfo.html_template
item_details_datatypes_class	src/ProjectInfo/model/ProjectInfo.js	/^    item_details_datatypes_class:"data-types",$/;"	p	class:ProjectInfo.html_template
item_example_class	src/ProjectInfo/model/ProjectInfo.js	/^    item_example_class:"example",$/;"	p	class:ProjectInfo.html_template
item_id_dot_replacer	src/ProjectInfo/model/ProjectInfo.js	/^    item_id_dot_replacer:"-",$/;"	p	class:ProjectInfo.html_template
item_id_prefix	src/ProjectInfo/model/ProjectInfo.js	/^    item_id_prefix:"id-",$/;"	p	class:ProjectInfo.html_template
item_name_class	src/ProjectInfo/model/ProjectInfo.js	/^    item_name_class:"object-name",$/;"	p	class:ProjectInfo.html_template
item_param_datatypes_class	src/ProjectInfo/model/ProjectInfo.js	/^    item_param_datatypes_class:"param-data-types",$/;"	p	class:ProjectInfo.html_template
keywords	package.json	/^  "keywords": [$/;"	a
lang	src/Options/Options.js	/^  lang: {$/;"	c	class:module.exports
lang	src/Options/option_keys.js	/^	"lang": "lang",$/;"	p	class:module.exports
lang	src/outputs/Console.js	/^  lang: options.lang.default,$/;"	p	class:module.exports
langauge_specific_messages	src/outputs/lang/language_specific.js	/^var langauge_specific_messages = {$/;"	c
langs	entry_point.js	/^  langs: require(".\/src\/outputs\/lang\/langs_list"),$/;"	p	class:LND
langs	src/outputs/lang/langs_lister.js	/^var langs = createLangNamesObject();$/;"	v
langs	src/outputs/lang/langs_lister.js	/^var langs = {};$/;"	v
langs_lister	build/prepare.js	/^var langs_lister = require(".\/..\/src\/outputs\/lang\/langs_lister");$/;"	v
license	package.json	/^  "license": "ISC",$/;"	s
list	src/Options/options_lister.js	/^var list = listKeys(options,ignores);$/;"	v
listCacheTree	src/processInterfaces.js	/^  listCacheTree: function() {$/;"	m	class:processInterfaces
listKeys	src/Options/options_lister.js	/^function listKeys(options,ignores){$/;"	f
listObjectNames	src/processInterfaces.js	/^  listObjectNames: function(object) {$/;"	m	class:processInterfaces
listTreeNames	src/intakes/resolve/resolveObjectDependencies.js	/^function listTreeNames(obj_names) {$/;"	f
lnd	test/message/msgtest.js	/^var lnd = require("..\/..\/entry_point");$/;"	v
lnd	test/options/optionstest.js	/^var lnd = require(__dirname+"\/..\/..\/entry_point");$/;"	v
loadAllRequiredFiles	src/intakes/IO/loadAllRequiredFiles.js	/^function loadAllRequiredFiles(cache_tree){$/;"	f
loadTemplate	src/arrange/html_page/createPage.js	/^function loadTemplate(ProjectInfo, options) {$/;"	f
locateComments	src/intakes/resolve/resolveFunctionComments.js	/^function locateComments(str,cpositions){$/;"	f
locateFunctionPositions	src/intakes/resolve/resolveFunctionComments.js	/^function locateFunctionPositions(otree){$/;"	f
lockfileVersion	package-lock.json	/^  "lockfileVersion": 1$/;"	n
log	test/options/otree.json	/^	"log": {$/;"	o
log.loglevels	test/options/otree.json	/^	"log.loglevels": {$/;"	o
log_path	src/Options/Options.js	/^  log_path: {$/;"	c	class:module.exports
log_path	src/Options/option_keys.js	/^	"log_path": "log_path",$/;"	p	class:module.exports
log_path	test/options/optionstest.js	/^  "log_path":"node_modulez\/loose-node-doc\/test\/options\/log.txt",$/;"	p	class:options
logs	src/outputs/Console.js	/^  logs: [],$/;"	p	class:module.exports
loose-node-doc	README.md	/^# loose-node-doc$/;"	c
main	package.json	/^  "main": "entry_point.js",$/;"	s
makeDataTypeElement	src/arrange/html/util/makeTaggedElement.js	/^function makeDataTypeElement(types,html_template,html_format){$/;"	f
makeElement	src/arrange/html/otreeToHtml.js	/^var makeElement = require(".\/util\/makeElement");$/;"	v
makeElement	src/arrange/html/util/makeElement.js	/^function makeElement(element,id,cls,content){$/;"	f
makeElement	src/arrange/html/util/makeTaggedElement.js	/^var makeElement = require(".\/makeElement");$/;"	v
makeElement	src/arrange/html_page/createPage.js	/^var makeElement = require(".\/..\/..\/arrange\/html\/util\/makeElement");$/;"	v
makeElement	src/arrange/html_page/util/createGNavi.js	/^var makeElement = require(".\/..\/..\/html\/util\/makeElement");$/;"	v
makeElement	src/arrange/html_page/util/createNotifications.js	/^var makeElement = require("..\/..\/html\/util\/makeElement");$/;"	v
makeHtml	src/processInterfaces.js	/^  makeHtml:function(otree,options,ProjectInfo){$/;"	m	class:processInterfaces
makeHtmlPage	src/processInterfaces.js	/^  makeHtmlPage:function(html,options,ProjectInfo){$/;"	m	class:processInterfaces
makeMeta	src/arrange/html_page/util/createMetas.js	/^function makeMeta(name,content,ProjectInfo){$/;"	f
makeNameId	src/arrange/html/util/commentToHtml.js	/^function makeNameId(name, html_template) {$/;"	f
makeOgpMeta	src/arrange/html_page/util/createMetas.js	/^function makeOgpMeta(property,content,ProjectInfo){$/;"	f
makeTaggedElement	src/arrange/html/util/makeTaggedElement.js	/^function makeTaggedElement(taglines,html_template,html_format){$/;"	f
matchCode	src/intakes/resolve/resolveCodeNames.js	/^function matchCode(code,obj_names){$/;"	f
matchCommentsAndFunctions	src/intakes/resolve/resolveFunctionComments.js	/^function matchCommentsAndFunctions(positions,c_positions,file){$/;"	f
matchFile	src/intakes/resolve/resolveCodeFiles.js	/^function matchFile(code, files) {$/;"	f
mergeUserDefinedComments	src/arrange/merge/mergeUserDefinedComments.js	/^function mergeUserDefinedComments(otree) {$/;"	f
messageExists	src/outputs/Console.js	/^  messageExists: function(key) {$/;"	m	class:module.exports
messages	src/outputs/Console.js	/^  messages: getMessages(options.lang.default, this),$/;"	p	class:module.exports
mock1	test/parse/parsetest.js	/^var mock1 = require("fs").readFileSync(__dirname+"\/mock1.txt","UTF-8");$/;"	v
mock1	test/parse/result.json	/^  "mock1": {$/;"	o
mock2	test/parse/parsetest.js	/^var mock2 = require("fs").readFileSync(__dirname+"\/mock2.txt","UTF-8");$/;"	v
mock2	test/parse/result.json	/^  "mock2": {$/;"	o
mock3	test/parse/parsetest.js	/^var mock3 = require("fs").readFileSync(__dirname+"\/mock3.txt","UTF-8");$/;"	v
mock3	test/parse/result.json	/^  "mock3": {$/;"	o
modifyFile	test/options/otree.json	/^	"modifyFile": {$/;"	o
name	package-lock.json	/^  "name": "loose-node-doc",$/;"	s
name	package.json	/^  "name": "loose-node-doc",$/;"	s
name	test/options/otree.json	/^				"name": "JSON"$/;"	s	object:JSON.comment.1
name	test/options/otree.json	/^				"name": "append"$/;"	s	object:modifyFile.comment.4
name	test/options/otree.json	/^				"name": "caption<\/caption>",$/;"	s	object:touchFiles.comment.4
name	test/options/otree.json	/^				"name": "date",$/;"	s	object:touchFiles.comment.3
name	test/options/otree.json	/^				"name": "dest_path"$/;"	s	object:modifyFile.comment.3
name	test/options/otree.json	/^				"name": "file_name"$/;"	s	object:readText.comment.1
name	test/options/otree.json	/^				"name": "file_name"$/;"	s	object:writeText.comment.1
name	test/options/otree.json	/^				"name": "files"$/;"	s	object:touchFiles.comment.2
name	test/options/otree.json	/^				"name": "from_path"$/;"	s	object:modifyFile.comment.1
name	test/options/otree.json	/^				"name": "from_to_pairs"$/;"	s	object:copyFiles.comment.1
name	test/options/otree.json	/^				"name": "https:\/\/tools.ietf.org\/html\/rfc5424"$/;"	s	object:log.loglevels.comment.2
name	test/options/otree.json	/^				"name": "list"$/;"	s	object:concatFiles.comment.2
name	test/options/otree.json	/^				"name": "list"$/;"	s	object:copyFilesBy.comment.1
name	test/options/otree.json	/^				"name": "log.loglevels"$/;"	s	object:log.loglevels.comment.1
name	test/options/otree.json	/^				"name": "prepend"$/;"	s	object:modifyFile.comment.2
name	test/options/otree.json	/^				"name": "str"$/;"	s	object:writeText.comment.2
name	test/options/otree.json	/^				"name": "target_path"$/;"	s	object:concatFiles.comment.1
name	test/options/otree.json	/^				"name": "to_dir"$/;"	s	object:copyFilesBy.comment.2
name	test/options/otree.json	/^				"name": "touchFiles"$/;"	s	object:touchFiles.comment.1
name	test/options/otree.json	/^		"name": "concatFiles",$/;"	s	object:concatFiles
name	test/options/otree.json	/^		"name": "copyFiles",$/;"	s	object:copyFiles
name	test/options/otree.json	/^		"name": "copyFilesBy",$/;"	s	object:copyFilesBy
name	test/options/otree.json	/^		"name": "modifyFile",$/;"	s	object:modifyFile
name	test/options/otree.json	/^		"name": "readText",$/;"	s	object:readText
name	test/options/otree.json	/^		"name": "touchFiles",$/;"	s	object:touchFiles
name	test/options/otree.json	/^		"name": "writeText",$/;"	s	object:writeText
name	test/parse/result.json	/^      "name": "AC34"$/;"	s	object:mock3.5
name	test/parse/result.json	/^      "name": "param_1"$/;"	s	object:mock2.1
name	test/parse/result.json	/^      "name": "param_1",$/;"	s	object:mock3.1
name	test/parse/result.json	/^      "name": "param_2"$/;"	s	object:mock2.2
name	test/parse/result.json	/^      "name": "param_2",$/;"	s	object:mock3.2
name	test/parse/result.json	/^      "name": "param_3"$/;"	s	object:mock2.3
name	test/parse/result.json	/^      "name": "param_3",$/;"	s	object:mock3.3
name	test/parse/result.json	/^      "name": "param_str"$/;"	s	object:mock1.1
name	test/parse/result.json	/^      "name": "success"$/;"	s	object:mock1.2
name	test/parse/result.json	/^      "name": "success"$/;"	s	object:mock2.4
name	test/parse/result.json	/^      "name": "success",$/;"	s	object:mock3.4
notification_class	src/ProjectInfo/model/ProjectInfo.js	/^    notification_class:"notification",$/;"	p	class:ProjectInfo.html_template
notifyInvalidKey	src/Options/validateOptions.js	/^function notifyInvalidKey(key,Console) {$/;"	f
notifyResolvedCommentsCount	src/processInterfaces.js	/^  notifyResolvedCommentsCount: function(otree) {$/;"	m	class:processInterfaces
object_names_empty	src/outputs/lang/en/US.js	/^  "object_names_empty":function(){$/;"	m	class:module.exports
object_tree_path	src/Options/Options.js	/^  object_tree_path: {$/;"	c	class:module.exports
object_tree_path	src/Options/option_keys.js	/^	"object_tree_path": "object_tree_path",$/;"	p	class:module.exports
object_tree_path	test/options/optionstest.js	/^  "object_tree_path":"node_modulez\/loose-node-doc\/test\/options\/otree.json",$/;"	p	class:options
omitFirstDot	src/arrange/ignore/ignorePaths.js	/^function omitFirstDot(path) {$/;"	f
option-invalid-option-key	src/outputs/lang/en/US.js	/^  "option-invalid-option-key":function(args={key:""}){$/;"	m	class:module.exports
option-wrong-datatype	src/outputs/lang/en/US.js	/^  "option-wrong-datatype":function(args={key:"",expected:"",actual:""}){$/;"	m	class:module.exports
option_keys	entry_point.js	/^  option_keys: require(".\/src\/Options\/options_lister")$/;"	p	class:LND
options	entry_point.js	/^  this.options = { verbose: true };$/;"	c	class:LND.generate
options	src/Options/options_lister.js	/^var options = require(".\/Options");$/;"	v
options	src/outputs/Console.js	/^var options = require(".\/..\/Options\/Options");$/;"	v
options	test/options/optionstest.js	/^options = {$/;"	c
options	test/options/optionstest.js	/^var options = {$/;"	c
options_lister	build/prepare.js	/^var options_lister = require("..\/src\/Options\/options_lister");$/;"	v
otree	src/intakes/resolve/resolveCommentsByTag.js	/^      otree[name] = {comment:formed[name]};$/;"	c	class:assignComments
otreeToHtml	src/arrange/html/otreeToHtml.js	/^function otreeToHtml(otree, options, ProjectInfo) {$/;"	f
otreeToRelativePaths	src/outputs/filter/otreeToRelativePaths.js	/^function otreeToRelativePaths(otree,project_root_dir){$/;"	f
outAny	src/outputs/Console.js	/^  outAny: function(message) {$/;"	m	class:module.exports
outMessage	src/outputs/Console.js	/^  outMessage: function(key, args = {}) {$/;"	m	class:module.exports
overrideOtreeByTrailTags	src/processInterfaces.js	/^  overrideOtreeByTrailTags:function(otree){$/;"	m	class:processInterfaces
package_json	src/ProjectInfo/model/ProjectInfo.js	/^  package_json:"",$/;"	p	class:ProjectInfo
package_json_path	src/Options/Options.js	/^  package_json_path: {$/;"	c	class:module.exports
package_json_path	src/Options/option_keys.js	/^	"package_json_path": "package_json_path",$/;"	p	class:module.exports
parseComment	src/arrange/merge/util/parseComment.js	/^function parseComment(otree_object){$/;"	f
parseComment	src/intakes/parse/parser/parseComment.js	/^function parseComment(comment_string) {$/;"	f
parseComments	src/arrange/merge/mergeUserDefinedComments.js	/^function parseComments(otree){$/;"	f
parseComments	src/intakes/parse/parseComments.js	/^function parseComments(otree){$/;"	f
parseComments	src/processInterfaces.js	/^  parseComments:function(otree,cache_tree,options){$/;"	m	class:processInterfaces
parseLine	src/intakes/parse/parser/parseComment.js	/^function parseLine(line, c_tree, c_index) {$/;"	f
parseLines	src/intakes/parse/parser/parseComment.js	/^function parseLines(lines, c_tree = {}, c_index = 0) {$/;"	f
parseTag	src/intakes/resolve/resolveCommentsByTag.js	/^function parseTag(comment,tag){$/;"	f
parser	test/parse/parsetest.js	/^var parser = require("loose-node-doc\/src\/util\/resolve\/parse\/parseComment");$/;"	v
path	src/ProjectInfo/getProjectInfo.js	/^var path = require("path");$/;"	v
pos	test/options/otree.json	/^		"pos": 171,$/;"	n	object:modifyFile
pos	test/options/otree.json	/^		"pos": 173,$/;"	n	object:copyFilesBy
pos	test/options/otree.json	/^		"pos": 263,$/;"	n	object:touchFiles
pos	test/options/otree.json	/^		"pos": 64,$/;"	n	object:concatFiles
pos	test/options/otree.json	/^		"pos": 70,$/;"	n	object:readText
pos	test/options/otree.json	/^		"pos": 81,$/;"	n	object:copyFiles
pos	test/options/otree.json	/^		"pos": 85,$/;"	n	object:writeText
proceed-with-default	src/outputs/lang/en/US.js	/^  "proceed-with-default":function(args={value:""}){$/;"	m	class:module.exports
proceed-with-default-language	src/outputs/lang/language_specific.js	/^  "proceed-with-default-language":function(){$/;"	m	class:langauge_specific_messages
process-error-on-writing-file	src/outputs/lang/en/US.js	/^  "process-error-on-writing-file":function(args={path:"",error:""}){$/;"	m	class:module.exports
process-ignored-default-paths	src/outputs/lang/en/US.js	/^  "process-ignored-default-paths":function(args={ignored_amount:""}){$/;"	m	class:module.exports
process-ignored-objects	src/outputs/lang/en/US.js	/^  "process-ignored-objects":function(args={ignored_amount:""}){$/;"	m	class:module.exports
process-ignored-paths	src/outputs/lang/en/US.js	/^  "process-ignored-paths":function(args={ignored_amount:""}){$/;"	m	class:module.exports
process-invalid-log-path	src/outputs/lang/en/US.js	/^  "process-invalid-log-path":function(args={path:""}){$/;"	m	class:module.exports
process-invalid-object-tree-path	src/outputs/lang/en/US.js	/^  "process-invalid-object-tree-path":function(args={path:""}){$/;"	m	class:module.exports
process-object-loaded	src/outputs/lang/en/US.js	/^  "process-object-loaded":function(){$/;"	m	class:module.exports
process-object-names-loaded	src/outputs/lang/en/US.js	/^  "process-object-names-loaded":function(args={number_of_keys:""}){$/;"	m	class:module.exports
process-options-loaded	src/outputs/lang/en/US.js	/^  "process-options-loaded":function(){$/;"	m	class:module.exports
process-resolved-comments	src/outputs/lang/en/US.js	/^  "process-resolved-comments":function(args={num:""}){$/;"	m	class:module.exports
process-stopped	src/outputs/lang/en/US.js	/^  "process-stopped":function(){$/;"	m	class:module.exports
process-traversed-caches	src/outputs/lang/en/US.js	/^  "process-traversed-caches":function(args={number_of_caches:""}){$/;"	m	class:module.exports
process-write-file-success	src/outputs/lang/en/US.js	/^  "process-write-file-success":function(args={path:""}){$/;"	m	class:module.exports
processInterfaces	src/processInterfaces.js	/^var processInterfaces = {$/;"	c
project_root_dir	src/ProjectInfo/model/ProjectInfo.js	/^  project_root_dir:"",$/;"	p	class:ProjectInfo
readPackageJson	src/ProjectInfo/getProjectInfo.js	/^function readPackageJson(package_file_path){$/;"	f
readText	test/options/otree.json	/^	"readText": {$/;"	o
replaceVersionPattern	src/outputs/FileWriter.js	/^FileWriter.prototype.replaceVersionPattern = function(path,ProjectInfo){$/;"	m	class:FileWriter
replacenPatterns	src/arrange/html_page/util/createMetas.js	/^function replacenPatterns(str,ProjectInfo){$/;"	f
repository	package.json	/^  "repository": {$/;"	o
resolveAbsolutePaths	src/arrange/ignore/ignorePaths.js	/^function resolveAbsolutePaths(root_dir, paths) {$/;"	f
resolveBuildScriptPath	src/ProjectInfo/getProjectInfo.js	/^function resolveBuildScriptPath(){$/;"	f
resolveC_Index	src/intakes/parse/parser/parseComment.js	/^function resolveC_Index(line, c_index) {$/;"	f
resolveChildren	src/intakes/traverse/traverseCache.js	/^function resolveChildren(tree){$/;"	f
resolveCodeNames	src/intakes/resolve/resolveCodeNames.js	/^function resolveCodeNames(objects_tree,obj_names){$/;"	f
resolveCodesFiles	src/intakes/resolve/resolveCodeFiles.js	/^function resolveCodesFiles(otree, files) {$/;"	f
resolveCommentsByTag	src/intakes/resolve/resolveCommentsByTag.js	/^function resolveCommentsByTag(otree, files, tag) {$/;"	f
resolveEntryPointPath	src/ProjectInfo/getProjectInfo.js	/^function resolveEntryPointPath(){$/;"	f
resolveFunctionComments	src/intakes/resolve/resolveFunctionComments.js	/^function resolveFunctionComments(otree,files) {$/;"	f
resolveObjectDependencies	src/intakes/resolve/resolveObjectDependencies.js	/^function resolveObjectDependencies( cache_tree, obj_names) {$/;"	f
resolveObjectTree	src/processInterfaces.js	/^  resolveObjectTree: function(ProjectInfo, obj_names, cache_tree) {$/;"	m	class:processInterfaces
resolvePackageFile	src/ProjectInfo/getProjectInfo.js	/^function resolvePackageFile(entry_point_dir,options){$/;"	f
resolveProjectRootDir	src/ProjectInfo/getProjectInfo.js	/^function resolveProjectRootDir(){$/;"	f
result	test/parse/parsetest.js	/^var result ={mock1,mock2,mock3};$/;"	v
salvageComments	src/intakes/resolve/resolveCommentsByTag.js	/^function salvageComments(str, list = []) {$/;"	f
scripts	package.json	/^  "scripts": {$/;"	o
sep	src/Options/options_lister.js	/^var sep = require("path").sep;$/;"	v
sep	src/ProjectInfo/getProjectInfo.js	/^var sep = path.sep;$/;"	v
sep	src/outputs/FileWriter.js	/^var sep = require("path").sep;$/;"	v
sep	src/outputs/lang/langs_lister.js	/^var sep = require("path").sep;$/;"	v
start	src/intakes/resolve/resolveFunctionComments.js	/^  cpositions[i] = {"start":starts_at+last_pos,"end":ends_at,"comment":str.substring(starts_at,en/;"	p	class:locateComments.cpositions
startReconstruction	src/intakes/resolve/resolveObjectDependencies.js	/^function startReconstruction(root_obj, caches, tree_names) {$/;"	f
supportsCountry	src/outputs/getMessages.js	/^function supportsCountry(language, country) {$/;"	f
supportsLanguage	src/outputs/getMessages.js	/^function supportsLanguage(language) {$/;"	f
tag	test/options/otree.json	/^				"tag": "@",$/;"	s	object:touchFiles.comment.4
tag	test/options/otree.json	/^				"tag": "link",$/;"	s	object:log.loglevels.comment.2
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:concatFiles.comment.1
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:concatFiles.comment.2
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:copyFiles.comment.1
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:copyFilesBy.comment.1
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:copyFilesBy.comment.2
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:modifyFile.comment.1
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:modifyFile.comment.2
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:modifyFile.comment.3
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:modifyFile.comment.4
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:readText.comment.1
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:touchFiles.comment.2
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:touchFiles.comment.3
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:writeText.comment.1
tag	test/options/otree.json	/^				"tag": "param",$/;"	s	object:writeText.comment.2
tag	test/options/otree.json	/^				"tag": "trail",$/;"	s	object:JSON.comment.1
tag	test/options/otree.json	/^				"tag": "trail",$/;"	s	object:log.loglevels.comment.1
tag	test/options/otree.json	/^				"tag": "trail",$/;"	s	object:touchFiles.comment.1
tag	test/parse/result.json	/^      "tag": "author",$/;"	s	object:mock3.5
tag	test/parse/result.json	/^      "tag": "param",$/;"	s	object:mock1.1
tag	test/parse/result.json	/^      "tag": "param",$/;"	s	object:mock2.1
tag	test/parse/result.json	/^      "tag": "param",$/;"	s	object:mock2.2
tag	test/parse/result.json	/^      "tag": "param",$/;"	s	object:mock3.1
tag	test/parse/result.json	/^      "tag": "param",$/;"	s	object:mock3.2
tag	test/parse/result.json	/^      "tag": "return",$/;"	s	object:mock1.2
tag	test/parse/result.json	/^      "tag": "return",$/;"	s	object:mock2.4
tag	test/parse/result.json	/^      "tag": "return",$/;"	s	object:mock3.4
tag	test/parse/result.json	/^      "tag": "unknown",$/;"	s	object:mock3.3
tag	test/parse/result.json	/^      "tag": "unkonown",$/;"	s	object:mock2.3
test	package.json	/^    "test": "echo \\"Error: no test specified\\" && exit 1"$/;"	s	object:scripts
time	test/options/otree.json	/^	"time": {$/;"	o
toReleative	src/outputs/filter/otreeToRelativePaths.js	/^function toReleative(path,project_root_dir){$/;"	f
touchFiles	test/options/otree.json	/^	"touchFiles": {$/;"	o
trail_tag	src/Options/Options.js	/^  trail_tag: {$/;"	c	class:module.exports
trail_tag	src/Options/option_keys.js	/^	"trail_tag": "trail_tag",$/;"	p	class:module.exports
traverseExports	src/intakes/resolve/resolveObjectDependencies.js	/^function traverseExports(prefix, parent_path, caches, tree, tree_names) {$/;"	f
traverseObjectNames	src/intakes/traverse/traverseObjectNames.js	/^function traverseObjectNames(object){$/;"	f
trim	src/arrange/html/util/makeElement.js	/^var trim = require(".\/trimForHtml");$/;"	v
trim	src/intakes/parse/parser/parseComment.js	/^function trim(str) {$/;"	f
trimForHtml	src/arrange/html/util/trimForHtml.js	/^function trimForHtml(comment_string){$/;"	f
type	package.json	/^    "type": "git",$/;"	s	object:repository
type	test/options/otree.json	/^		"type": "function",$/;"	s	object:concatFiles
type	test/options/otree.json	/^		"type": "function",$/;"	s	object:copyFiles
type	test/options/otree.json	/^		"type": "function",$/;"	s	object:copyFilesBy
type	test/options/otree.json	/^		"type": "function",$/;"	s	object:modifyFile
type	test/options/otree.json	/^		"type": "function",$/;"	s	object:readText
type	test/options/otree.json	/^		"type": "function",$/;"	s	object:touchFiles
type	test/options/otree.json	/^		"type": "function",$/;"	s	object:writeText
type	test/options/otree.json	/^		"type": "object"$/;"	s	object:log
type	test/options/otree.json	/^		"type": "object"$/;"	s	object:time
type	test/options/otree.json	/^		"type": "object"$/;"	s	object:util
type	test/options/otree.json	/^		"type": "object",$/;"	s	object:JSON
types	test/options/otree.json	/^				"types": "*",$/;"	s	object:writeText.comment.1
types	test/options/otree.json	/^				"types": "*",$/;"	s	object:writeText.comment.2
types	test/options/otree.json	/^				"types": "Date",$/;"	s	object:touchFiles.comment.3
types	test/options/otree.json	/^				"types": "array",$/;"	s	object:concatFiles.comment.2
types	test/options/otree.json	/^				"types": "array",$/;"	s	object:copyFilesBy.comment.1
types	test/options/otree.json	/^				"types": "array",$/;"	s	object:touchFiles.comment.2
types	test/options/otree.json	/^				"types": "object",$/;"	s	object:copyFiles.comment.1
types	test/options/otree.json	/^				"types": "string",$/;"	s	object:concatFiles.comment.1
types	test/options/otree.json	/^				"types": "string",$/;"	s	object:copyFilesBy.comment.2
types	test/options/otree.json	/^				"types": "string",$/;"	s	object:modifyFile.comment.1
types	test/options/otree.json	/^				"types": "string",$/;"	s	object:modifyFile.comment.2
types	test/options/otree.json	/^				"types": "string",$/;"	s	object:modifyFile.comment.3
types	test/options/otree.json	/^				"types": "string",$/;"	s	object:modifyFile.comment.4
types	test/options/otree.json	/^				"types": "string",$/;"	s	object:readText.comment.1
types	test/parse/result.json	/^      "types": "boolean",$/;"	s	object:mock1.2
types	test/parse/result.json	/^      "types": "boolean",$/;"	s	object:mock2.2
types	test/parse/result.json	/^      "types": "boolean",$/;"	s	object:mock2.4
types	test/parse/result.json	/^      "types": "boolean",$/;"	s	object:mock3.2
types	test/parse/result.json	/^      "types": "boolean",$/;"	s	object:mock3.4
types	test/parse/result.json	/^      "types": "object",$/;"	s	object:mock2.3
types	test/parse/result.json	/^      "types": "object",$/;"	s	object:mock3.3
types	test/parse/result.json	/^      "types": "string",$/;"	s	object:mock1.1
types	test/parse/result.json	/^      "types": "string",$/;"	s	object:mock3.1
types	test/parse/result.json	/^      "types": "string,array",$/;"	s	object:mock2.1
unsupported-country-code	src/outputs/lang/language_specific.js	/^  "unsupported-country-code":function(unsupported_code){$/;"	m	class:langauge_specific_messages
unsupported-language-code	src/outputs/lang/language_specific.js	/^  "unsupported-language-code":function(unsupported_code){$/;"	m	class:langauge_specific_messages
updateMessages	src/outputs/Console.js	/^  updateMessages: function(options) {$/;"	m	class:module.exports
updateObjectTree	src/intakes/resolve/resolveFunctionComments.js	/^function updateObjectTree(otree,func_locs){$/;"	f
url	package.json	/^    "url": "git+https:\/\/github.com\/AC34\/loose-node-doc.git"$/;"	s	object:repository
url	package.json	/^    "url": "https:\/\/github.com\/AC34\/loose-node-doc\/issues"$/;"	s	object:bugs
util	test/options/otree.json	/^	"util": {$/;"	o
validateOptions	src/Options/validateOptions.js	/^function validateOptions(object, Console) {$/;"	f
validateOptions	src/processInterfaces.js	/^  validateOptions: function(object) {$/;"	m	class:processInterfaces
verbose	entry_point.js	/^  this.options = { verbose: true };$/;"	p	class:LND.generate.options
verbose	src/Options/Options.js	/^  verbose: {$/;"	c	class:module.exports
verbose	src/Options/option_keys.js	/^	"verbose": "verbose",$/;"	p	class:module.exports
verbose	src/outputs/Console.js	/^  verbose: options.verbose.default,$/;"	p	class:module.exports
verbose	test/options/optionstest.js	/^  "verbose":1234,$/;"	p	class:options
verbose	test/options/optionstest.js	/^  "verbose":false,$/;"	p	class:options
verbose	test/options/optionstest.js	/^  "verbose":true,$/;"	p	class:options
version	build/prepare.js	/^var version = require("..\/package.json").version;$/;"	v
version	package-lock.json	/^  "version": "0.0.0",$/;"	s
version	package.json	/^  "version": "0.0.0",$/;"	s
writeHtml	src/outputs/FileWriter.js	/^FileWriter.prototype.writeHtml = function(html_path,html){$/;"	m	class:FileWriter
writeHtmlPage	src/processInterfaces.js	/^  writeHtmlPage:function(html,options,ProjectInfo){$/;"	m	class:processInterfaces
writeLogs	src/outputs/FileWriter.js	/^FileWriter.prototype.writeLogs = function(log_path, logs) {$/;"	m	class:FileWriter
writeLogs	src/processInterfaces.js	/^  writeLogs: function(ProjectInfo, options) {$/;"	m	class:processInterfaces
writeObject	src/outputs/FileWriter.js	/^FileWriter.prototype.writeObject = function(file_path, object) {$/;"	m	class:FileWriter
writeObjectTree	src/processInterfaces.js	/^  writeObjectTree: function(ProjectInfo, options, otree) {$/;"	m	class:processInterfaces
writeText	test/options/otree.json	/^	"writeText": {$/;"	o
write_logs	src/Options/Options.js	/^  write_logs: {$/;"	c	class:module.exports
write_logs	src/Options/option_keys.js	/^	"write_logs": "write_logs",$/;"	p	class:module.exports
write_logs	test/options/optionstest.js	/^  "write_logs":true,$/;"	p	class:options
write_object_tree	src/Options/Options.js	/^  write_object_tree: {$/;"	c	class:module.exports
write_object_tree	src/Options/option_keys.js	/^	"write_object_tree": "write_object_tree",$/;"	p	class:module.exports
write_object_tree	test/options/optionstest.js	/^  "write_object_tree":true,$/;"	p	class:options
zero-comments-resolved	src/outputs/lang/en/US.js	/^  "zero-comments-resolved":function(){$/;"	m	class:module.exports
💬Anouncement	README.md	/^## 💬Anouncement$/;"	s
