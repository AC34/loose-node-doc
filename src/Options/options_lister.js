//This file does not need to be included in npm package.
//This file should be run before updting.

var sep = require("path").sep;
var file = __dirname + sep + "option_keys.js";
var options = require("./Options");
//false on ignore key
var ignore = { default_ignore_paths: false, html_gnavi_links: { self: false } };
var list = listKeys(options);
var comment =
  "/*\n" +
  " * Do not edit this file manually.\n" +
  " * Update this file by ./options_lister.js\n" +
  "*/\n";
var data = (comment += "module.exports =" + JSON.stringify(list, null, "\t"));
//write
require("fs").writeFileSync(file, data, { encoding: "utf-8", flags: "w" });

function listKeys(options) {
  var list = {};
  for (var key in options) {
    //ignore
    if (ignoreFirst(key)) continue;
    list[key] = key;
    //adding second level keys from here
    if (typeof options[key].default !== "object") continue;
    if (Array.isArray(options[key].default)) continue;
    //at this point list[key] exists
    if (Object.keys(options[key].default).length > 0) {
      //redefine as an object
      list[key] = {};
      var keys2 = Object.keys(options[key].default);
      for (var i in keys2) {
        if (ignoreSecond(key, keys2[i])) continue;
        list[key][keys2[i]] = keys2[i];
      }
    }
  }
  return list;
}
//tells if first level element should be modified
function ignoreFirst(key) {
  if (!ignore[key]) return false;
  return true;
}
//tells if second level elemtn should be ignored
function ignoreSecond(first, second) {
  if (!ignore[first]) return false;
  if (ignore[first][second]) return true;
  return false;
}
